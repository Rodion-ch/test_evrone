services:
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - kafka
      - alembic
      - redis
    environment:
      - APP_MODE=http
      - DATABASE_URL=postgresql+asyncpg://user:password@db:5432/evrone_db
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
    command: >
      sh -c "python /app/wait_for_services.py &&
             uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    networks:
      - default
    volumes:
      - /Users/rshchebentovskiy/Desktop/tests/Evrone/test_evrone/app:/app
  
  web_queue:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8001:8000"
    depends_on:
      - db
      - kafka
      - alembic
      - redis
    environment:
      - APP_MODE=queue
      - DATABASE_URL=postgresql+asyncpg://user:password@db:5432/evrone_db
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
    command: >
      sh -c "python /app/wait_for_services.py &&
             uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    networks:
      - default
    volumes:
      - /Users/rshchebentovskiy/Desktop/tests/Evrone/test_evrone/app:/app
  
  worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    depends_on:
      - db
      - kafka
      - redis
    environment:
      - APP_MODE=${APP_MODE}
      - DATABASE_URL=postgresql+asyncpg://user:password@db:5432/evrone_db
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
    command: ["python", "/app/worker.py"]
    networks:
      - default
    volumes:
      - /Users/rshchebentovskiy/Desktop/tests/Evrone/test_evrone/app:/app

  alembic:
    build:
      context: ..
      dockerfile: docker/Dockerfile.migrate
    command: ["alembic", "upgrade", "head"]
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@db:5432/evrone_db
    networks:
      - default
    # volumes:
    #   - /Users/rshchebentovskiy/Desktop/tests/Evrone/test_evrone/alembic:/app/alembic
    #   - /Users/rshchebentovskiy/Desktop/tests/Evrone/test_evrone/app:/app

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=evrone_db
    ports:
      - "5432:5432"
    networks:
      - default

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONSUMER_TIMEOUT_MS: 150000
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_API_TIMEOUT_MS: 60000
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - default

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - default

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    networks:
      - default

volumes:
  postgres_data:

networks:
  default:
    driver: bridge